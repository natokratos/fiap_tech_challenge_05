networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

services:
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: db04
    image: apppostgres
    restart: always
    ports:
      - "127.0.0.1:5432:5432"   
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    volumes:
      - pgdata:/var/lib/postgresql/data 
    networks:
      default:
        ipv4_address: 172.30.0.2

  adminer:
    container_name: adminer04
    image: adminer
    restart: always
    ports:
      - 8090:8080
    networks:
      default:
        ipv4_address: 172.30.0.3

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tech04
    tty: true
    ports:
      - "8080:8080"
    environment:
      "COMPOSE_BAKE": "true"
    volumes:
      - ".:/app"
    networks:
      default:
        ipv4_address: 172.30.0.4

  tensorflow:
    container_name: tensorflow04
    image: tensorflow/tensorflow
    restart: always
    tty: true
    command: tensorboard --logdir /app/logs --host 0.0.0.0
    ports:
      - 6006:6006
    volumes:
      - ".:/app"
    networks:
      default:
        ipv4_address: 172.30.0.5

  portainer:
    container_name: portainer04
    image: portainer/portainer-ce:lts
    restart: always
    ports:
      - 8000:8000
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data portainer/portainer-ce:lts
    networks:
      default:
        ipv4_address: 172.30.0.6

volumes:
  pgdata:
  portainer_data:
